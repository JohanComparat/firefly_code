#! /usr/bin/env python

import sys
for arg in sys.argv:
    print( arg )

from os.path import join
import os
import time
import numpy as np
import glob
import astropy.cosmology as co
cosmo = co.Planck13
#cosmo=co.FlatLambdaCDM(H0=70,Om0=0.3)

# for one galaxy spectrum
import GalaxySpectrumFIREFLY as gs
import StellarPopulationModel as spm

plate = sys.argv[1]


def runSpec(specLiteFile):
	baseN = os.path.basename(specLiteFile).split('-')
	plate = baseN[1] #7457# sys.argv[1] #7619
	mjd = baseN[2] # 56746#sys.argv[2] # 56900
	fibre = baseN[3] # 471#sys.argv[3] #300
	
	t0=time.time()
	spec=gs.GalaxySpectrumFIREFLY(specLiteFile, milky_way_reddening=True)
	spec.openObservedSDSSSpectrum(survey='sdss4')
	ageMax = np.log10(cosmo.age(spec.redshift).value*1e9)
	if spec.hdulist[2].data['CLASS'][0]=="GALAXY" and spec.hdulist[2].data['Z'][0] >  spec.hdulist[2].data['Z_ERR'][0] and spec.hdulist[2].data['Z_ERR'][0]>0 and spec.hdulist[2].data['ZWARNING'][0] ==0 :
		
		outputFolder = join( os.environ['EBOSSDRX_DIR'], 'stellarpop', str(plate))
		output_file = join(outputFolder , 'spFly-' + os.path.basename(specLiteFile)[5:-5] )+".fits"
		print( t0                          )
		print( output_file                 )
		print( "--------------------------")
		if os.path.isdir(outputFolder)==False:
			os.mkdir(outputFolder)
		
		prihdr = spm.pyfits.Header()
		prihdr['FILE']          = os.path.basename(output_file)
		prihdr['PLATE']         = plate 
		prihdr['MJD']           = mjd   
		prihdr['FIBERID']       = fibre 
		prihdr['MODELS']	    = "Maraston_2011"
		prihdr['FITTER']	    = "FIREFLY"	
		prihdr['AGEMIN']	    = "6"		
		prihdr['AGEMAX']	    = "20"
		prihdr['ZMIN']	        = "-3.0"
		prihdr['ZMAX']	        = "3.0"
		prihdr['redshift']	    = spec.hdulist[2].data['Z'][0]
		prihdr['HIERARCH age_universe']	= np.round(cosmo.age(spec.hdulist[2].data['Z'][0]).value,3)
		prihdu = spm.pyfits.PrimaryHDU(header=prihdr)

		tables = [prihdu]
		did_not_converged = 0.			
		try :
			model_2 = spm.StellarPopulationModel(spec, output_file, cosmo, models = 'm11', model_libs = ['MILES_UVextended'], imfs = ['ss'], age_limits = [6,20], downgrade_models = True, data_wave_medium = 'vacuum', Z_limits = [-3.,3.], use_downgraded_models = True, write_results = False)
			model_2.fit_models_to_data()
			tables.append( model_2.tbhdu )
			
		except (ValueError):
			tables.append( model_2.create_dummy_hdu() )
			did_not_converged +=1
		
		if did_not_converged < 9 :
			complete_hdus = spm.pyfits.HDUList(tables)
			if os.path.isfile(output_file):
				os.remove(output_file)
				
			complete_hdus.writeto(output_file)

	print ("time used =", time.time()-t0 ,"seconds")
	return spec

fileList = np.array(glob.glob(join( os.environ['EBOSSDR16_DIR'], 'spectra', str(plate), 'spec-*.fits')))
fileList.sort()

for el in fileList:
	print( el )	
	#outputFile = join( os.environ['EBOSSDR16_DIR'], 'stellarpop-m11-chabrier', 'stellarpop', str(plate), 'spFly-' + os.path.basename(el)[5:-5]+"-cha.fits")
	#if os.path.isfile(outputFile) :
	#	print( outputFile )
	#else :
	spec = runSpec(el)
	
		
